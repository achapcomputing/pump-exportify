{"version":3,"sources":["icons.jsx","helpers.tsx","components/Login.jsx","components/Logout.tsx","components/FilterSliders.jsx","components/PumpPlaylistGenerator.jsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["library","add","fab","faCheckCircle","faTimesCircle","faFileArchive","faHeart","faBolt","faMusic","faDownload","faCog","faSearch","faTimes","faSignOutAlt","getQueryParam","name","replace","results","RegExp","exec","window","location","search","decodeURIComponent","limiter","Bottleneck","maxConcurrent","minTime","on","error","jobInfo","a","response","status","retryCount","headers","Bugsnag","notify","event","addMetadata","config","groupingHash","wrap","url","accessToken","axios","get","Login","clientId","changeUser","href","encodeURIComponent","protocol","host","pathname","join","Button","id","type","variant","size","onClick","this","authorize","icon","React","Component","Logout","handleClick","split","title","FilterSliders","useState","energyValue","setEnergyValue","finalEnergyValue","setFinalEnergyValue","danceValue","setDanceValue","finalDanceValue","setFinalDanceValue","tempoValue","setTempoValue","finalTempoValue","setFinalTempoValue","value","onChange","e","target","onAfterChange","min","max","tooltip","spotifyApi","SpotifyWebApi","PumpPlaylistGenerator","props","workoutTracks","energyFilter","danceabilityFilter","tempoFilter","state","userId","initialized","savedTracks","filteredUris","playlistId","savedSongs","limit","count","progressBar","show","label","token","getHashParams","access_token","setAccessToken","hashParams","r","q","hash","substring","getMe","then","setState","offset","i","getMySavedTracks","totalSaved","total","getTrackAudioFeatures","items","console","log","catch","err","tracks","ids","forEach","t","push","track","getAudioFeaturesForTracks","audio_features","uri","energy","danceability","tempo","filterTracks","filtered","createPlaylist","description","public","length","uris","slice","addTracksToPlaylist","getMyUserId","generatePlaylist","App","view","key","URLSearchParams","className","style","fontSize","marginBottom","rel","marginTop","has","color","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","shim","start","apiKey","plugins","BugsnagPluginReact","redactedKeys","enabledReleaseStages","onError","request","originalError","isAxiosError","message","ErrorBoundary","getPlugin","createErrorBoundary","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dab2044f.chunk.js","sourcesContent":["import { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faCheckCircle, faTimesCircle, faFileArchive, faHeart } from '@fortawesome/free-regular-svg-icons'\r\nimport { faBolt, faMusic, faDownload, faCog, faSearch, faTimes, faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(\r\n  fab,\r\n  faCheckCircle,\r\n  faTimesCircle,\r\n  faFileArchive,\r\n  faHeart,\r\n  faBolt,\r\n  faMusic,\r\n  faDownload,\r\n  faCog,\r\n  faSearch,\r\n  faTimes,\r\n  faSignOutAlt\r\n)\r\n","import Bugsnag from \"@bugsnag/js\"\r\nimport axios from \"axios\"\r\nimport Bottleneck from \"bottleneck\"\r\n\r\n// http://stackoverflow.com/a/901144/4167042\r\nexport function getQueryParam(name: string) {\r\n  name = name.replace(/[[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\r\n  var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\r\n      results = regex.exec(window.location.search);\r\n  return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\r\n}\r\n\r\nconst REQUEST_RETRY_BUFFER = 1000\r\nconst MAX_RATE_LIMIT_RETRIES = 2 // 3 attempts in total\r\nconst limiter = new Bottleneck({\r\n  maxConcurrent: 1,\r\n  minTime: 0\r\n})\r\n\r\nlimiter.on(\"failed\", async (error, jobInfo) => {\r\n  if (error.response.status === 429 && jobInfo.retryCount < MAX_RATE_LIMIT_RETRIES) {\r\n    // Retry according to the indication from the server with a small buffer\r\n    return ((error.response.headers[\"retry-after\"] || 1) * 1000) + REQUEST_RETRY_BUFFER\r\n  } else if (error.response.status !== 401 && error.response.status !== 429 && jobInfo.retryCount === 0) {\r\n    // Log and retry any other failure once (e.g. 503/504 which sometimes occur)\r\n    Bugsnag.notify(\r\n      error,\r\n      (event) => {\r\n        event.addMetadata(\"response\", error.response)\r\n        event.addMetadata(\"request\", error.config)\r\n        event.groupingHash = \"Retried Request\"\r\n      }\r\n    )\r\n\r\n    return REQUEST_RETRY_BUFFER\r\n  }\r\n})\r\n\r\nexport const apiCall = limiter.wrap(function(url: string, accessToken: string) {\r\n  return axios.get(url, { headers: { 'Authorization': 'Bearer ' + accessToken } })\r\n})\r\n\r\nexport function apiCallErrorHandler(error: any) {\r\n  if (error.isAxiosError) {\r\n    if (error.request.status === 401) {\r\n      // Return to home page after auth token expiry\r\n      window.location.href = window.location.href.split('#')[0]\r\n      return\r\n    }\r\n  }\r\n\r\n  throw error\r\n}\r\n","import React from \"react\"\r\nimport { Button } from \"react-bootstrap\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { getQueryParam } from \"helpers\"\r\n\r\nclass Login extends React.Component {\r\n  authorize() {\r\n    // let clientId = \"b8267324f80b4a9b9ba8c410e566b844\"\r\n    let clientId = getQueryParam(\"app_client_id\")\r\n    let changeUser = getQueryParam(\"change_user\") !== \"\"\r\n\r\n    // Use Pumpify application clientId if none given\r\n    if (clientId === '') {\r\n      clientId = \"b8267324f80b4a9b9ba8c410e566b844\"\r\n    }\r\n\r\n    window.location.href = \"https://accounts.spotify.com/authorize\" +\r\n      \"?client_id=\" + clientId +\r\n      \"&redirect_uri=\" + encodeURIComponent([window.location.protocol, '//', window.location.host, window.location.pathname].join('')) +\r\n      \"&scope=user-library-read%20playlist-modify-public\" +\r\n      \"&response_type=token\" +\r\n      \"&show_dialog=\" + changeUser;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Button id=\"loginButton\" type=\"submit\" variant=\"outline-secondary\" size=\"lg\" onClick={this.authorize}>\r\n        <FontAwesomeIcon icon={['far', 'check-circle']} size=\"sm\" /> Get Started\r\n      </Button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login\r\n","import React from \"react\"\r\nimport { Button } from \"react-bootstrap\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\nclass Logout extends React.Component {\r\n  handleClick = () => {\r\n    window.location.href = `${window.location.href.split('#')[0]}?change_user=true`\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Button id=\"logoutButton\" type=\"submit\" variant=\"link\" size=\"lg\" onClick={this.handleClick} title=\"Change user\">\r\n        <FontAwesomeIcon icon={['fas', 'sign-out-alt']} size=\"lg\" />\r\n      </Button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Logout\r\n","import React, { useState } from 'react';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\n\r\nconst FilterSliders = () => {\r\n\r\n  const [ energyValue, setEnergyValue ] = useState(7);\r\n  const [ finalEnergyValue, setFinalEnergyValue ] = React.useState(energyValue);\r\n  const [ danceValue, setDanceValue ] = useState(5);\r\n  const [ finalDanceValue, setFinalDanceValue ] = React.useState(danceValue);\r\n  const [ tempoValue, setTempoValue ] = useState(120);\r\n  const [ finalTempoValue, setFinalTempoValue ] = React.useState(tempoValue);\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div>\r\n        <RangeSlider\r\n          value={energyValue}\r\n          onChange={e => setEnergyValue(e.target.value)}\r\n          onAfterChange={e => setFinalEnergyValue(e.target.value)}\r\n          min={0}\r\n          max={10}\r\n          tooltip='off'\r\n        />\r\n        <div>Minimum Energy Rating: {finalEnergyValue / 10.0}</div>\r\n      </div>\r\n\r\n      <div>\r\n        <RangeSlider\r\n          value={danceValue}\r\n          onChange={e => setDanceValue(e.target.value)}\r\n          onAfterChange={e => setFinalDanceValue(e.target.value)}\r\n          min={0}\r\n          max={10}\r\n          tooltip='off'\r\n        />\r\n        <div>Minimum Danceability Rating: {finalDanceValue / 10.0}</div>\r\n      </div>\r\n\r\n      <div>\r\n        <RangeSlider\r\n          value={tempoValue}\r\n          onChange={e => setTempoValue(e.target.value)}\r\n          onAfterChange={e => setFinalTempoValue(e.target.value)}\r\n          min={0}\r\n          max={200}\r\n          tooltip='off'\r\n        />\r\n        <div>Minimum Tempo: {finalTempoValue} bpm</div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default FilterSliders;","import React from \"react\"\r\nimport { Button } from \"react-bootstrap\"\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport FilterSliders from 'components/FilterSliders'\r\n// import { apiCall, apiCallErrorHandler } from \"helpers\"\r\n\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\nclass PumpPlaylistGenerator extends React.Component {\r\n\r\n  workoutTracks = [];\r\n  energyFilter = 0.7;\r\n  danceabilityFilter = 0.5;\r\n  tempoFilter = 120;\r\n\r\n  state = {\r\n    userId: \"\",\r\n    initialized: false,\r\n    savedTracks: [],\r\n    filteredUris: [],\r\n    playlistId: \"\",\r\n    savedSongs: {\r\n      limit: 0,\r\n      count: 0\r\n    },\r\n    progressBar: {\r\n      show: false,\r\n      label: \"\",\r\n      value: 0\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    const params = this.getHashParams();\r\n    const token = params.access_token;\r\n    if (token) {\r\n      spotifyApi.setAccessToken(token);\r\n    }\r\n  }\r\n\r\n  getHashParams() {\r\n    var hashParams = {};\r\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\r\n      q = window.location.hash.substring(1);\r\n    e = r.exec(q)\r\n    while (e) {\r\n      hashParams[e[1]] = decodeURIComponent(e[2]);\r\n      e = r.exec(q);\r\n    }\r\n    return hashParams;\r\n  }\r\n\r\n  async getMyUserId() {\r\n    await spotifyApi.getMe()\r\n      .then((response) => {\r\n        this.setState({\r\n          userId: response.id\r\n        })\r\n      })\r\n  }\r\n\r\n  async getMySavedTracks() {\r\n    const offset = 50;\r\n    for (var i = 0; i < 2000; i += offset) {\r\n      await spotifyApi.getMySavedTracks({ limit: offset, offset: i })\r\n        .then((response) => {\r\n          this.setState({\r\n            totalSaved: response.total\r\n          })\r\n          this.getTrackAudioFeatures(response.items);\r\n          console.log(response.offset);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n          console.error(\"ERROR: Error getting saved tracks\");\r\n        })\r\n      }\r\n    }\r\n  \r\n  getTrackAudioFeatures(tracks) {\r\n    const ids = [];\r\n    tracks.forEach(t => {\r\n      ids.push(t.track.id);\r\n    })\r\n    spotifyApi.getAudioFeaturesForTracks(ids)\r\n      .then((response) => {\r\n        var i = 0;\r\n        response.audio_features.forEach(t => {\r\n          this.state.savedTracks.push({\r\n            id: t.id,\r\n            uri: t.uri,\r\n            name: tracks[i++].track.name,\r\n            energy: t.energy,\r\n            danceability: t.danceability,\r\n            tempo: t.tempo\r\n          })\r\n        })\r\n        this.filterTracks();\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        console.error(\"Error getting audio features for tracks\")\r\n      })\r\n  }\r\n\r\n  filterTracks() {\r\n    const filtered = [];\r\n    this.state.savedTracks.forEach(t => {\r\n      if (t.energy >= this.energyFilter && t.danceability >= this.danceabilityFilter && t.tempo >= this.tempoFilter) {\r\n        filtered.push(t.uri);\r\n      }\r\n    });\r\n    this.setState({\r\n      filteredUris: filtered\r\n    })\r\n    console.log(this.state.filteredUris);\r\n  }\r\n\r\n  async createPlaylist() {\r\n    await spotifyApi.createPlaylist(this.state.userId, \r\n    { \r\n      name: \"API Playlist\", \r\n      description: `Liked Songs filtered by Energy: ${this.energyFilter}, Danceability: ${this.danceabilityFilter}, and Tempo: ${this.tempoFilter}.`,\r\n      public: true\r\n    })\r\n    .then((response) => {\r\n      console.log(\"MAKING PLAYLIST! \" + response.id);\r\n      this.setState({\r\n        playlistId: response.id\r\n      })\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n      console.error(\"ERROR: Error creating playlist\");\r\n    })\r\n  }\r\n\r\n  addTracksToPlaylist() {\r\n    const offset = 100;\r\n    for (var i = 0; i < this.state.filteredUris.length; i += offset) {\r\n      const uris = this.state.filteredUris.slice(i, i + offset);\r\n      spotifyApi.addTracksToPlaylist(this.state.playlistId, uris)\r\n      .then(() => {\r\n        console.log(\"added!\");\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        console.error(\"ERROR: Error adding workout tracks to playlist\")\r\n      })\r\n    }\r\n  }\r\n\r\n  async generatePlaylist() {\r\n    await this.getMyUserId();\r\n    // get saved songs\r\n    await this.getMySavedTracks()\r\n    // filter saved songs\r\n    // create new playlist\r\n    await this.createPlaylist();\r\n    // add songs to playlist\r\n    this.addTracksToPlaylist();\r\n    console.log(\"help!\" + this.state.playlistId)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <FilterSliders />\r\n          <Button onClick={() => this.generatePlaylist()}>Generate Playlist</Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PumpPlaylistGenerator\r\n","import './App.scss'\r\nimport \"./icons\"\r\n\r\nimport React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\r\nimport \"url-search-params-polyfill\"\r\n\r\nimport Login from 'components/Login'\r\nimport PlaylistTable from \"components/PlaylistTable\"\r\nimport SongTable from \"components/SongTable\"\r\nimport { getQueryParam } from \"helpers\"\r\nimport Logout from \"components/Logout\"\r\nimport FilterSliders from 'components/FilterSliders'\r\nimport PumpPlaylistGenerator from 'components/PumpPlaylistGenerator';\r\n\r\nfunction App() {\r\n  let view\r\n  let key = new URLSearchParams(window.location.hash.substring(1))\r\n\r\n  if (getQueryParam('rate_limit_message') !== '') {\r\n    view = <div id=\"rateLimitMessage\" className=\"lead\">\r\n      <p><FontAwesomeIcon icon={['fas', 'bolt']} style={{ fontSize: \"50px\", marginBottom: \"20px\" }} /></p>\r\n      <p>Oops, Exportify has encountered a <a target=\"_blank\" rel=\"noreferrer\" href=\"https://developer.spotify.com/web-api/user-guide/#rate-limiting\">rate limiting</a> error while using the Spotify API. This might be because of the number of users currently exporting playlists, or perhaps because you have too many playlists to export all at once. Try <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/watsonbox/exportify/issues/6#issuecomment-110793132\">creating your own</a> Spotify application. If that doesn't work, please add a comment to <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/watsonbox/exportify/issues/6\">this issue</a> where possible resolutions are being discussed.</p>\r\n      <p style={{ marginTop: \"50px\" }}>It should still be possible to export individual playlists, particularly when using your own Spotify application.</p>\r\n    </div>\r\n  } else if (key.has('access_token')) {\r\n    view = <div>\r\n      <PumpPlaylistGenerator accessToken={key.get('access_token')} />\r\n      {/* <SongTable accessToken={key.get('access_token')} /> */}\r\n      {/* <PlaylistTable accessToken={key.get('access_token')} /> */}\r\n    </div>\r\n  } else {\r\n    view = <Login />\r\n  }\r\n\r\n  return (\r\n    <div className=\"App container\">\r\n      <header className=\"App-header\">\r\n        { key.has('access_token') && <Logout /> }\r\n        <h1>\r\n          <FontAwesomeIcon icon={['fab', 'spotify']} color=\"#84BD00\" size=\"sm\" /> <a href={process.env.PUBLIC_URL}>Pumpify</a>\r\n        </h1>\r\n\r\n        <p id=\"subtitle\" className=\"lead text-secondary\">\r\n          Create Spotify playlist from your Liked Songs to get Pumped\r\n        </p>\r\n      </header>\r\n\r\n      {view}\r\n\r\n      <footer className=\"App-footer\">\r\n        <p id=\"subtitle\" className=\"lead text-secondary\">\r\n          Based on<a href=\"https://watsonbox.github.io/exportify/\" target=\"_blank\"> Exportify by Watsonbox</a> \r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\"\r\nimport Bugsnag from '@bugsnag/js'\r\nimport BugsnagPluginReact from '@bugsnag/plugin-react'\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.scss\"\r\nimport App from \"./App\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\n\r\n// https://caniuse.com/mdn-javascript_builtins_array_flatmap\r\nrequire('array.prototype.flatmap').shim()\r\n\r\nBugsnag.start({\r\n  apiKey: 'a65916528275f084a1754a59797a36b3',\r\n  plugins: [new BugsnagPluginReact()],\r\n  redactedKeys: ['Authorization'],\r\n  enabledReleaseStages: [ 'production', 'staging' ],\r\n  onError: function (event) {\r\n    event.request.url = \"[REDACTED]\" // Don't send access tokens\r\n\r\n    if (event.originalError.isAxiosError) {\r\n      event.groupingHash = event.originalError.message\r\n    }\r\n  }\r\n})\r\n\r\nconst ErrorBoundary = Bugsnag.getPlugin('react')!.createErrorBoundary(React)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ErrorBoundary>\r\n      <App />\r\n    </ErrorBoundary>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}