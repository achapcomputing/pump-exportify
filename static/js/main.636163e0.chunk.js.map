{"version":3,"sources":["icons.jsx","helpers.tsx","components/Login.jsx","components/Logout.tsx","components/PlaylistGenerator.jsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["library","add","fab","faCheckCircle","faTimesCircle","faFileArchive","faHeart","faBolt","faMusic","faDownload","faCog","faSearch","faTimes","faSignOutAlt","getQueryParam","name","replace","results","RegExp","exec","window","location","search","decodeURIComponent","limiter","Bottleneck","maxConcurrent","minTime","on","error","jobInfo","a","response","status","retryCount","headers","Bugsnag","notify","event","addMetadata","config","groupingHash","wrap","url","accessToken","axios","get","Login","clientId","changeUser","href","encodeURIComponent","protocol","host","pathname","join","Button","id","type","variant","size","onClick","this","authorize","icon","React","Component","Logout","handleClick","split","title","spotifyApi","SpotifyWebApi","energyPopover","Popover","Title","Content","dancePopover","tempoPopover","PlaylistGenerator","defaultPlaylistName","useState","energyFilter","energyValue","setEnergyValue","danceabilityFilter","danceValue","setDanceValue","tempoValue","setTempoValue","playlistId","playlistLinkId","setPlaylistLinkId","playlistCreated","setPlaylistCreated","playlistLoading","setPlaylistLoading","playlistLength","setPlaylistLength","playlistName","setPlaylistName","playlistNameInputRef","createRef","userId","totalSaved","savedTracks","filteredUris","setUserToken","token","e","hashParams","r","q","hash","substring","getHashParams","access_token","setAccessToken","getMyUserId","getMe","then","console","log","catch","err","getMySavedTracks","offset","i","limit","total","getTrackAudioFeatures","items","tracks","ids","forEach","t","push","track","getAudioFeaturesForTracks","audio_features","uri","energy","danceability","tempo","filtered","filterTracks","createPlaylist","description","public","addTracksToPlaylist","length","uris","slice","Container","fluid","Row","Col","sm","value","onChange","target","min","max","tooltip","text-align","OverlayTrigger","placement","overlay","className","InputGroup","Prepend","Text","FormControl","placeholder","aria-label","aria-describedby","ref","current","generatePlaylist","disabled","Spinner","animation","App","view","key","URLSearchParams","style","fontSize","marginBottom","rel","marginTop","has","color","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","shim","start","apiKey","plugins","BugsnagPluginReact","redactedKeys","enabledReleaseStages","onError","request","originalError","isAxiosError","message","ErrorBoundary","getPlugin","createErrorBoundary","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.636163e0.chunk.js","sourcesContent":["import { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faCheckCircle, faTimesCircle, faFileArchive, faHeart } from '@fortawesome/free-regular-svg-icons'\r\nimport { faBolt, faMusic, faDownload, faCog, faSearch, faTimes, faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(\r\n  fab,\r\n  faCheckCircle,\r\n  faTimesCircle,\r\n  faFileArchive,\r\n  faHeart,\r\n  faBolt,\r\n  faMusic,\r\n  faDownload,\r\n  faCog,\r\n  faSearch,\r\n  faTimes,\r\n  faSignOutAlt\r\n)\r\n","import Bugsnag from \"@bugsnag/js\"\r\nimport axios from \"axios\"\r\nimport Bottleneck from \"bottleneck\"\r\n\r\n// http://stackoverflow.com/a/901144/4167042\r\nexport function getQueryParam(name: string) {\r\n  name = name.replace(/[[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\r\n  var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\r\n      results = regex.exec(window.location.search);\r\n  return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\r\n}\r\n\r\nconst REQUEST_RETRY_BUFFER = 1000\r\nconst MAX_RATE_LIMIT_RETRIES = 2 // 3 attempts in total\r\nconst limiter = new Bottleneck({\r\n  maxConcurrent: 1,\r\n  minTime: 0\r\n})\r\n\r\nlimiter.on(\"failed\", async (error, jobInfo) => {\r\n  if (error.response.status === 429 && jobInfo.retryCount < MAX_RATE_LIMIT_RETRIES) {\r\n    // Retry according to the indication from the server with a small buffer\r\n    return ((error.response.headers[\"retry-after\"] || 1) * 1000) + REQUEST_RETRY_BUFFER\r\n  } else if (error.response.status !== 401 && error.response.status !== 429 && jobInfo.retryCount === 0) {\r\n    // Log and retry any other failure once (e.g. 503/504 which sometimes occur)\r\n    Bugsnag.notify(\r\n      error,\r\n      (event) => {\r\n        event.addMetadata(\"response\", error.response)\r\n        event.addMetadata(\"request\", error.config)\r\n        event.groupingHash = \"Retried Request\"\r\n      }\r\n    )\r\n\r\n    return REQUEST_RETRY_BUFFER\r\n  }\r\n})\r\n\r\nexport const apiCall = limiter.wrap(function(url: string, accessToken: string) {\r\n  return axios.get(url, { headers: { 'Authorization': 'Bearer ' + accessToken } })\r\n})\r\n\r\nexport function apiCallErrorHandler(error: any) {\r\n  if (error.isAxiosError) {\r\n    if (error.request.status === 401) {\r\n      // Return to home page after auth token expiry\r\n      window.location.href = window.location.href.split('#')[0]\r\n      return\r\n    }\r\n  }\r\n\r\n  throw error\r\n}\r\n","import React from \"react\"\r\nimport { Button } from \"react-bootstrap\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { getQueryParam } from \"helpers\"\r\n\r\nclass Login extends React.Component {\r\n  authorize() {\r\n    // let clientId = \"b8267324f80b4a9b9ba8c410e566b844\"\r\n    let clientId = getQueryParam(\"app_client_id\")\r\n    let changeUser = getQueryParam(\"change_user\") !== \"\"\r\n\r\n    // Use Pumpify application clientId if none given\r\n    if (clientId === '') {\r\n      clientId = \"b8267324f80b4a9b9ba8c410e566b844\"\r\n    }\r\n\r\n    window.location.href = \"https://accounts.spotify.com/authorize\" +\r\n      \"?client_id=\" + clientId +\r\n      \"&redirect_uri=\" + encodeURIComponent([window.location.protocol, '//', window.location.host, window.location.pathname].join('')) +\r\n      \"&scope=user-library-read%20playlist-modify-public\" +\r\n      \"&response_type=token\" +\r\n      \"&show_dialog=\" + changeUser;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Button id=\"loginButton\" type=\"submit\" variant=\"outline-secondary\" size=\"lg\" onClick={this.authorize}>\r\n        <FontAwesomeIcon icon={['far', 'check-circle']} size=\"sm\" /> Get Started\r\n      </Button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login\r\n","import React from \"react\"\r\nimport { Button } from \"react-bootstrap\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\nclass Logout extends React.Component {\r\n  handleClick = () => {\r\n    window.location.href = `${window.location.href.split('#')[0]}?change_user=true`\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Button id=\"logoutButton\" type=\"submit\" variant=\"link\" size=\"lg\" onClick={this.handleClick} title=\"Change user\">\r\n        <FontAwesomeIcon icon={['fas', 'sign-out-alt']} size=\"lg\" />\r\n      </Button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Logout\r\n","import '../App.scss'\r\nimport '../index.scss'\r\n\r\nimport React, { useState, createRef } from 'react';\r\nimport { Button, Container, Row, Col, Spinner, Popover, OverlayTrigger, InputGroup, FormControl } from \"react-bootstrap\"\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\n\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\nconst PlaylistGenerator = () => {\r\n\r\n    const energyFilter = 0.7;\r\n    const danceabilityFilter = 0.5;\r\n    const tempoFilter = 120;\r\n    const defaultPlaylistName = \"Pumpify Playlist\"\r\n\r\n    const [ energyValue, setEnergyValue ] = useState(energyFilter * 10);\r\n    const [ danceValue, setDanceValue ] = useState(danceabilityFilter * 10);\r\n    const [ tempoValue, setTempoValue ] = useState(tempoFilter);\r\n    const [ playlistLinkId, setPlaylistLinkId ] = useState(playlistId);\r\n    const [ playlistCreated, setPlaylistCreated ] = useState(false);\r\n    const [ playlistLoading, setPlaylistLoading ] = useState(false);\r\n    const [ playlistLength, setPlaylistLength ] = useState(0);\r\n    const [ playlistName, setPlaylistName ] = useState(defaultPlaylistName);\r\n    const playlistNameInputRef = createRef();\r\n\r\n    var userId = \"\";\r\n    var playlistId = \"\";\r\n    var totalSaved = 3000;\r\n    var savedTracks = [];\r\n    var filteredUris = [];\r\n\r\n    function getHashParams() {\r\n        var hashParams = {};\r\n        var e, r = /([^&;=]+)=?([^&;]*)/g,\r\n          q = window.location.hash.substring(1);\r\n        e = r.exec(q)\r\n        while (e) {\r\n          hashParams[e[1]] = decodeURIComponent(e[2]);\r\n          e = r.exec(q);\r\n        }\r\n        return hashParams;\r\n      }\r\n    \r\n    function setUserToken() {\r\n        const params = getHashParams();\r\n        const token = params.access_token;\r\n        if (token) {\r\n          spotifyApi.setAccessToken(token);\r\n        }\r\n    }\r\n    \r\n    function getMyUserId() {\r\n        setUserToken();\r\n        spotifyApi.getMe()\r\n          .then((response) => {\r\n            userId = response.id;\r\n            console.log(userId);\r\n        })\r\n        .catch((err) => {\r\n            console.error(err);\r\n        })\r\n    }\r\n\r\n    async function getMySavedTracks() {\r\n        const offset = 50;\r\n        for (var i = 0; i < totalSaved; i += offset) {\r\n          await spotifyApi.getMySavedTracks({ limit: offset, offset: i })\r\n            .then((response) => {\r\n              totalSaved = response.total\r\n              getTrackAudioFeatures(response.items);\r\n              console.log(response.offset);\r\n            })\r\n            .catch((err) => {\r\n              console.error(err);\r\n              console.error(\"ERROR: Error getting saved tracks\");\r\n            })\r\n        }\r\n    }\r\n\r\n    function getTrackAudioFeatures(tracks) {\r\n        const ids = [];\r\n        tracks.forEach(t => {\r\n          ids.push(t.track.id);\r\n        })\r\n        spotifyApi.getAudioFeaturesForTracks(ids)\r\n            .then((response) => {\r\n                var i = 0;\r\n                response.audio_features.forEach(t => {\r\n                    savedTracks.push({\r\n                        id: t.id,\r\n                        uri: t.uri,\r\n                        name: tracks[i++].track.name,\r\n                        energy: t.energy,\r\n                        danceability: t.danceability,\r\n                        tempo: t.tempo\r\n                    })\r\n                })\r\n                filterTracks();\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                console.error(\"Error getting audio features for tracks\")\r\n        })\r\n    }\r\n\r\n    function filterTracks() {\r\n        const filtered = [];\r\n        savedTracks.forEach(t => {\r\n            if (t.energy >= (energyValue / 10.0) && t.danceability >= (danceValue / 10.0) && t.tempo >= tempoValue) {\r\n                filtered.push(t.uri);\r\n            }\r\n        });\r\n        filteredUris = filtered;\r\n        console.log(filteredUris);\r\n    }\r\n\r\n    async function createPlaylist() {\r\n        await spotifyApi.createPlaylist(userId, \r\n        { \r\n            name: playlistName,\r\n            description: `Liked Songs filtered by Energy: ${energyValue / 10.0}, Danceability: ${danceValue / 10.0}, and Tempo: ${tempoValue}. Created with https://achapcomputing.github.io/pumpify/`,\r\n            public: true\r\n        })\r\n        .then((response) => {\r\n            console.log(\"MAKING PLAYLIST! \" + response.id);\r\n            playlistId = response.id\r\n            console.log(\"hi \" + playlistId);\r\n        })\r\n        .catch((err) => {\r\n            console.error(err);\r\n            console.error(\"ERROR: Error creating playlist\");\r\n        })\r\n    }\r\n\r\n    async function addTracksToPlaylist() {\r\n        const offset = 100;\r\n        for (var i = 0; i < filteredUris.length; i += offset) {\r\n            const uris = filteredUris.slice(i, i + offset);\r\n            await spotifyApi.addTracksToPlaylist(playlistId, uris)\r\n            .then(() => {\r\n                console.log(\"added!\");\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                console.error(\"ERROR: Error adding workout tracks to playlist\")\r\n            })\r\n        }\r\n    }\r\n    \r\n    async function generatePlaylist() {\r\n        setPlaylistLoading(true);\r\n        setPlaylistCreated(false);\r\n        await getMyUserId();\r\n        // get saved songs\r\n        await getMySavedTracks()\r\n        // filter saved songs\r\n        // create new playlist\r\n        await createPlaylist();\r\n        // add songs to playlist\r\n        await addTracksToPlaylist();\r\n        if (playlistId !== \"\") {\r\n            setPlaylistLinkId(playlistId);\r\n        }\r\n        if (filteredUris.length > 0) {\r\n            setPlaylistLoading(false);\r\n            setPlaylistCreated(true);\r\n            setPlaylistLength(filteredUris.length);\r\n        }\r\n        console.log(\"help! \" + playlistId)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col sm=\"8\">\r\n                        <RangeSlider\r\n                            value={energyValue}\r\n                            onChange={e => setEnergyValue(e.target.value)}\r\n                            min={0}\r\n                            max={10}\r\n                            tooltip='off'\r\n                            variant=\"secondary\"\r\n                        />\r\n                    </Col>\r\n                    <Col sm=\"4\" text-align=\"right\">\r\n                        Minimum Energy Rating: {energyValue / 10.0}\r\n                        <OverlayTrigger placement=\"right\" overlay={energyPopover}>\r\n                            <Button id=\"infoPopover\" size=\"sm\" variant=\"outline-primary\">?</Button>\r\n                        </OverlayTrigger>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm=\"8\">\r\n                        <RangeSlider\r\n                            value={danceValue}\r\n                            onChange={e => setDanceValue(e.target.value)}\r\n                            min={0}\r\n                            max={10}\r\n                            tooltip='off'\r\n                            variant='secondary'\r\n                        />\r\n                    </Col>\r\n                    <Col sm=\"4\" text-align=\"right\">\r\n                        Minimum Danceability Rating: {danceValue / 10.0}\r\n                        <OverlayTrigger placement=\"right\" overlay={dancePopover}>\r\n                            <Button id=\"infoPopover\" size=\"sm\" variant=\"outline-primary\">?</Button>\r\n                        </OverlayTrigger>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm=\"8\">\r\n                        <RangeSlider\r\n                            value={tempoValue}\r\n                            onChange={e => setTempoValue(e.target.value)}\r\n                            min={0}\r\n                            max={200}\r\n                            tooltip='off'\r\n                            variant='secondary'\r\n                        />\r\n                    </Col>\r\n                    <Col sm=\"4\" text-align=\"right\">\r\n                        Minimum Tempo: {tempoValue} bpm\r\n                        <OverlayTrigger placement=\"right\" overlay={tempoPopover}>\r\n                            <Button id=\"infoPopover\" size=\"sm\" variant=\"outline-primary\">?</Button>\r\n                        </OverlayTrigger>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            <Container>\r\n                <Row className=\"center\">\r\n                    <InputGroup className=\"mb-3 w-50\" >\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text id=\"basic-addon1\">Playlist Name</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                            placeholder={defaultPlaylistName}\r\n                            aria-label={defaultPlaylistName}\r\n                            aria-describedby=\"basic-addon1\"\r\n                            className=\"w-75\"\r\n                            ref={playlistNameInputRef}\r\n                            onChange={() => setPlaylistName(playlistNameInputRef.current.value)}\r\n                        />\r\n                    </InputGroup>\r\n                </Row>\r\n            </Container>\r\n\r\n            <Container className=\"Generate\">\r\n                <Row>\r\n                    <Button id=\"createButton\" variant=\"outline-primary\" onClick={() => generatePlaylist()} disabled={playlistLoading}>Generate Playlist</Button>\r\n                </Row>\r\n                <Row className=\"center\">\r\n                    {\r\n                        playlistLoading &&\r\n                        <Spinner animation=\"grow\" variant='primary' />\r\n                    }\r\n                    {\r\n                        playlistCreated && playlistLinkId &&\r\n                        <div>\r\n                            <p className=\"lead text-secondary\">\r\n                                <a href={`https://open.spotify.com/playlist/${playlistLinkId}`} target=\"_blank\">Playlist Created!</a>\r\n                            </p>\r\n                            <p className=\"text-secondary\">\r\n                                {playlistLength} Songs Added\r\n                            </p>                            \r\n                        </div>\r\n                    }\r\n                </Row>\r\n            </Container>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst energyPopover = (\r\n    <Popover>\r\n        <Popover.Title>Energy</Popover.Title>\r\n        <Popover.Content>Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy.</Popover.Content>\r\n    </Popover>\r\n);\r\n\r\nconst dancePopover = (\r\n    <Popover>\r\n        <Popover.Title>Danceability</Popover.Title>\r\n        <Popover.Content>Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable.</Popover.Content>\r\n    </Popover>\r\n);\r\n\r\nconst tempoPopover = (\r\n    <Popover>\r\n        <Popover.Title>Tempo</Popover.Title>\r\n        <Popover.Content>The overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration.</Popover.Content>\r\n    </Popover>\r\n);\r\n\r\nexport default PlaylistGenerator;","import './App.scss'\r\nimport \"./icons\"\r\n\r\nimport React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\r\nimport \"url-search-params-polyfill\"\r\n\r\nimport Login from 'components/Login'\r\nimport PlaylistTable from \"components/PlaylistTable\"\r\nimport { getQueryParam } from \"helpers\"\r\nimport Logout from \"components/Logout\"\r\nimport FilterSliders from 'components/FilterSliders'\r\nimport PlaylistGenerator from 'components/PlaylistGenerator';\r\n\r\nfunction App() {\r\n  let view\r\n  let key = new URLSearchParams(window.location.hash.substring(1))\r\n\r\n  if (getQueryParam('rate_limit_message') !== '') {\r\n    view = <div id=\"rateLimitMessage\" className=\"lead\">\r\n      <p><FontAwesomeIcon icon={['fas', 'bolt']} style={{ fontSize: \"50px\", marginBottom: \"20px\" }} /></p>\r\n      <p>Oops, Exportify has encountered a <a target=\"_blank\" rel=\"noreferrer\" href=\"https://developer.spotify.com/web-api/user-guide/#rate-limiting\">rate limiting</a> error while using the Spotify API. This might be because of the number of users currently exporting playlists, or perhaps because you have too many playlists to export all at once. Try <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/watsonbox/exportify/issues/6#issuecomment-110793132\">creating your own</a> Spotify application. If that doesn't work, please add a comment to <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/watsonbox/exportify/issues/6\">this issue</a> where possible resolutions are being discussed.</p>\r\n      <p style={{ marginTop: \"50px\" }}>It should still be possible to export individual playlists, particularly when using your own Spotify application.</p>\r\n    </div>\r\n  } else if (key.has('access_token')) {\r\n    view = <div>\r\n      <PlaylistGenerator />\r\n      {/* <PumpPlaylistGenerator accessToken={key.get('access_token')} /> */}\r\n      {/* <SongTable accessToken={key.get('access_token')} /> */}\r\n      {/* <PlaylistTable accessToken={key.get('access_token')} /> */}\r\n    </div>\r\n  } else {\r\n    view = <Login />\r\n  }\r\n\r\n  return (\r\n    <div className=\"App container\">\r\n      <header className=\"App-header\">\r\n        { key.has('access_token') && <Logout /> }\r\n        <h1>\r\n          <FontAwesomeIcon icon={['fab', 'spotify']} color=\"#84BD00\" size=\"sm\" /> <a href={process.env.PUBLIC_URL}>Pumpify</a>\r\n        </h1>\r\n\r\n        <p id=\"subtitle\" className=\"lead text-secondary\">\r\n          Generating high-intensity playlists for the most pumped-up workout\r\n        </p>\r\n      </header>\r\n\r\n      {view}\r\n\r\n      <footer className=\"App-footer\">\r\n        <p id=\"subtitle\" className=\"lead text-secondary\">\r\n          Based on <a href=\"https://watsonbox.github.io/exportify/\" target=\"_blank\">Exportify by Watsonbox</a> \r\n        </p>\r\n        <p id=\"subtitle\" className=\"lead text-secondary\">\r\n          View <a href=\"https://github.com/achapcomputing/pumpify/tree/master\" target=\"_blank\">GitHub Repository</a> \r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\"\r\nimport Bugsnag from '@bugsnag/js'\r\nimport BugsnagPluginReact from '@bugsnag/plugin-react'\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.scss\"\r\nimport App from \"./App\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\n\r\n// https://caniuse.com/mdn-javascript_builtins_array_flatmap\r\nrequire('array.prototype.flatmap').shim()\r\n\r\nBugsnag.start({\r\n  apiKey: 'a65916528275f084a1754a59797a36b3',\r\n  plugins: [new BugsnagPluginReact()],\r\n  redactedKeys: ['Authorization'],\r\n  enabledReleaseStages: [ 'production', 'staging' ],\r\n  onError: function (event) {\r\n    event.request.url = \"[REDACTED]\" // Don't send access tokens\r\n\r\n    if (event.originalError.isAxiosError) {\r\n      event.groupingHash = event.originalError.message\r\n    }\r\n  }\r\n})\r\n\r\nconst ErrorBoundary = Bugsnag.getPlugin('react')!.createErrorBoundary(React)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ErrorBoundary>\r\n      <App />\r\n    </ErrorBoundary>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}